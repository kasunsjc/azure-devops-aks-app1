# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'ACR-ManaualConnection'
  imageRepository: 'app1/app1nginx'
  containerRegistry: 'cloudlifeacr.azurecr.io'
  dockerfilePath: '*/Dockerfile'
  tag: '$(Build.BuildId)'

  azureSubscriptionEndpoint: Microsoft Azure Sponsorship-Azure
  azureContainerRegistry: contoso.azurecr.io
  azureResourceGroup: Contoso
  kubernetesCluster: Contoso
  useClusterAdmin: false
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: qetza.replacetokens.replacetokens-task.replacetokens@3
      displayName: 'Replace tokens in mhc-aks.yaml'
      inputs:
        targetFiles: 'Git-Repository-files/kube-manifests/01-Deployment-and-LoadBalancer-Service.yml'
        escapeType: none
        tokenPrefix: '__'
        tokenSuffix: '__'   
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: PublishBuildArtifacts@1
      displayName: publish artifacts
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'

# - stage: Deploy
#   displayName: Deploy to AKS
#   jobs:
#     - job: Deploy
#       displayName: Deploy to aks
#       pool:
#         vmImage: $(vmImageName)
